//
// ImagevalidationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire




public class ImagevalidationAPI: APIBase {

    /**
     
     Submit image validation
     
     - parameter req: (body) Image validation request, contains sku and image sizes per space
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func pOSTImagevalidation(req req: ImageValidationVm, completion: ((data: ImageValidatorResult?, error: ErrorType?) -> Void)) {
        pOSTImagevalidationWithRequestBuilder(req: req).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }



    /**
     
     Submit image validation
     
     - POST /imagevalidation/
     - Validates an images and returns a validation errors (if available).
     - examples: [{contentType=application/json, example={
  "Issues" : [ {
    "PropertyName" : "aeiou",
    "ErrorMessage" : "aeiou",
    "AttemptedValue" : "aeiou"
  } ],
  "HadError" : true
}}]
     
     - parameter req: (body) Image validation request, contains sku and image sizes per space

     - returns: RequestBuilder<ImageValidatorResult> 
     */
    public class func pOSTImagevalidationWithRequestBuilder(req req: ImageValidationVm) -> RequestBuilder<ImageValidatorResult> {
        let path = "/imagevalidation/"
        let URLString = Gooten.API.ClientAPI.basePath + path
        
        let parameters = req.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<ImageValidatorResult>.Type = Gooten.API.ClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }


}


