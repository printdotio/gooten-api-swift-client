//
// LanguagesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class LanguagesAPI: APIBase {
    /**
     
     Get text in a specified language
     
     - parameter languageCode: (query) Two-character language code, like \&quot;en\&quot; (english)
     - parameter key: (query) A string used to query the language dictionary for specific values within a category.
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getLanguageText(languageCode languageCode: String, key: String?, completion: ((data: LanguageDictionary?, error: ErrorType?) -> Void)) {
        getLanguageTextWithRequestBuilder(languageCode: languageCode, key: key).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Get text in a specified language
     
     - GET /languages/
     - Get text in a specified language
     - examples: [{contentType=application/json, example={
  "values" : [ {
    "value" : "aeiou",
    "key" : "aeiou"
  } ],
  "category" : "aeiou"
}}]
     
     - parameter languageCode: (query) Two-character language code, like \&quot;en\&quot; (english)
     - parameter key: (query) A string used to query the language dictionary for specific values within a category.

     - returns: RequestBuilder<LanguageDictionary> 
     */
    public class func getLanguageTextWithRequestBuilder(languageCode languageCode: String, key: String?) -> RequestBuilder<LanguageDictionary> {
        let path = "/languages/"
        let URLString = Gooten.API.ClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "languageCode": languageCode,
            "key": key
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<LanguageDictionary>.Type = Gooten.API.ClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
