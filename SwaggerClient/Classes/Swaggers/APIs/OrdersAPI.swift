//
// OrdersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class OrdersAPI: APIBase {
    /**
     
     Get an order
     
     - parameter id: (query) Order Id
     - parameter version: (path) Version of the api being used
     - parameter source: (path) Description of the source-- ios, android, api
     - parameter languageCode: (query) Resultant info language. Defaults to &#39;en&#39;.
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func gETOrders(id id: String, version: Int, source: String, languageCode: String?, completion: ((data: PostSubmittedOrder?, error: ErrorType?) -> Void)) {
        gETOrdersWithRequestBuilder(id: id, version: version, source: source, languageCode: languageCode).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Get an order
     
     - GET /orders/v/{version}/source/{source}/
     - Gets basic information about an order.
     - examples: [{contentType=application/json, example={
  "BillingAddress" : {
    "Email" : "aeiou",
    "FirstName" : "aeiou",
    "State" : "aeiou",
    "Phone" : "aeiou",
    "PostalCode" : "aeiou",
    "LastName" : "aeiou",
    "City" : "aeiou",
    "IsBusinessAddress" : true,
    "CountryCode" : "aeiou",
    "Line1" : "aeiou",
    "Line2" : "aeiou"
  },
  "Meta" : "",
  "ShippingTotal" : "",
  "Total" : "",
  "ShippingAddress" : "",
  "NiceId" : "aeiou",
  "SouceId" : "aeiou",
  "Items" : [ {
    "Status" : "aeiou",
    "Meta" : {
      "Value" : "aeiou",
      "Key" : "aeiou"
    },
    "TrackingNumber" : "aeiou",
    "SourceId" : "aeiou",
    "Product" : "aeiou",
    "Quantity" : 123456789,
    "ProductId" : 123456789,
    "DiscountAmount" : "",
    "ShipCarrierName" : "aeiou",
    "Price" : {
      "CurrencyCode" : "aeiou",
      "Price" : 123456789,
      "CurrencyFormat" : "aeiou",
      "FormattedPrice" : "aeiou",
      "CurrencyDigits" : 123456789
    },
    "Sku" : "aeiou",
    "TrackingUrl" : "aeiou",
    "Shipments" : [ {
      "ShipCarrierName" : "aeiou",
      "TrackingNumber" : "aeiou",
      "TrackingUrl" : "aeiou"
    } ]
  } ],
  "Id" : "aeiou",
  "DiscountCode" : "aeiou",
  "DiscountAmount" : ""
}}]
     
     - parameter id: (query) Order Id
     - parameter version: (path) Version of the api being used
     - parameter source: (path) Description of the source-- ios, android, api
     - parameter languageCode: (query) Resultant info language. Defaults to &#39;en&#39;.

     - returns: RequestBuilder<PostSubmittedOrder> 
     */
    public class func gETOrdersWithRequestBuilder(id id: String, version: Int, source: String, languageCode: String?) -> RequestBuilder<PostSubmittedOrder> {
        var path = "/orders/v/{version}/source/{source}/"
        path = path.stringByReplacingOccurrencesOfString("{version}", withString: "\(version)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{source}", withString: "\(source)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "id": id,
            "languageCode": languageCode
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<PostSubmittedOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Submit an order
     
     - parameter order: (body) Order to be submitted
     - parameter version: (path) Version of the api being used
     - parameter source: (path) Description of the source-- ios, android, api
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func pOSTOrders(order order: PostOrder, version: Int, source: String, completion: ((data: OrderResult?, error: ErrorType?) -> Void)) {
        pOSTOrdersWithRequestBuilder(order: order, version: version, source: source).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Submit an order
     
     - POST /orders/v/{version}/source/{source}/
     - Places an order into the system. An order can be submitted as PrePayment (in order to temporarily place an order and get an ID for Paypal) using the IsPreSubmit flag.
     - examples: [{contentType=application/json, example={
  "Id" : "aeiou"
}}]
     
     - parameter order: (body) Order to be submitted
     - parameter version: (path) Version of the api being used
     - parameter source: (path) Description of the source-- ios, android, api

     - returns: RequestBuilder<OrderResult> 
     */
    public class func pOSTOrdersWithRequestBuilder(order order: PostOrder, version: Int, source: String) -> RequestBuilder<OrderResult> {
        var path = "/orders/v/{version}/source/{source}/"
        path = path.stringByReplacingOccurrencesOfString("{version}", withString: "\(version)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{source}", withString: "\(source)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        
        let parameters = order.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<OrderResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
